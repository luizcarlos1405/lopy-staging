!function(){"use strict";const e=1617329118403,t=`cache${e}`,s=["/client/client.a9df488d.js","/client/inject_styles.5607aec6.js","/client/index.78eb83e5.js","/client/constants.206f8009.js","/client/longpress.a9121745.js","/client/[id].6fa1896b.js","/client/Button.d965e84f.js","/client/[id].e4a7d5b8.js"].concat(["/service-worker-index.html","/favicon.ico","/global.css","/logo-192.png","/logo-512.png","/logo-maskable-512.png","/manifest.json"]),n=new Set(s);self.addEventListener("install",(e=>{e.waitUntil(caches.open(t).then((e=>e.addAll(s.map((e=>`.${e}`))))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const s of e)s!==t&&await caches.delete(s);self.clients.claim()})))})),self.addEventListener("fetch",(t=>{if("GET"!==t.request.method||t.request.headers.has("range"))return;const s=new URL(t.request.url),c=s.protocol.startsWith("http"),a=s.hostname===self.location.hostname&&s.port!==self.location.port,i=s.host===self.location.host&&n.has(s.pathname),o="only-if-cached"===t.request.cache&&!i;console.log("isHttp, isDevServerRequest, skipBecauseUncached",c,a,o),!c||a||o||t.respondWith((async()=>i&&await caches.match(t.request)||async function(t){const s=await caches.open(`offline${e}`);try{const e=await fetch(t);return s.put(t,e.clone()),e}catch(e){const n=await s.match(t);if(n)return n;throw e}}(t.request))())}))}();
